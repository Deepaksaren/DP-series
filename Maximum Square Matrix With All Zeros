Maximum Square Matrix With All Zeros
Send Feedback
Given an NxM matrix that contains only 0s and 1s, find out the size of the maximum square sub-matrix with all 0s. You need to return the size of the square matrix with all 0s.
Input format :
The first line of the test case contains two integer values, 'N' and 'M', separated by a single space. They represent the 'rows' and 'columns' respectively.

Second-line onwards, the next 'N' lines or rows represent the ith row values.

Each of the ith rows constitutes column values separated by a single space (Either 0 or 1).
Output Format:
Print the size of maximum square sub-matrix.
 Constraints :
0 <= N <= 10^4
0 <= M <= 10^4

Time Limit: 1 sec
Sample Input 1:
3 3
1 1 0
1 1 1
1 1 1
Sample Output 1:
1
Sample Input 2:
4 4
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
Sample Output 2:
4

from sys import stdin
def findMaxSquareWithAllZeros(arr):
    if len(arr) == 0:
        return 0
    row = len(arr)
    col = len(arr[0])
    dp = [[0 for j in range(col)]for i in range(row)]
    for i in range(row):
        for j in range(col):
            if arr[i][j] == 0:
                dp[i][j] = 1+ min(dp[i-1][j-1], dp[i][j-1], dp[i-1][j])
            else:
                dp[i][j] = 0
    count = 0
    for i in range(row):
        for j in range(col):
            if dp[i][j] > count:
                count = dp[i][j]
    return count



# To take fast I/O
def takeInput():
    m, n=[int(i) for i in stdin.readline().rstrip().rsplit()]
    mat = [ [] ] * m
    if m==0:
        return m,n,mat
    for i in range(m):
        mat[i]=list(int(i) for i in stdin.readline().rstrip().rsplit())
    return m,n,mat


# Main
m,n,mat = takeInput()
print(findMaxSquareWithAllZeros(mat))
