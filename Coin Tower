Whis and Beerus are playing a new game today. They form a tower of N coins and make a move in alternate turns. Beerus plays first. 
In one step, the player can remove either 1, X, or Y coins from the tower. The person to make the last move wins the game. Can you find out who wins the game?
 Input format :
The first and the only line of input contains three integer values separated by a single space. They denote the value of N, X and Y, respectively.
Output format :
Prints the name of the winner, either 'Whis' or 'Beerus' (Without the quotes).
Constraints :
1 <= N <= 10 ^ 6
2 <= X <= Y<= 50

Time Limit: 1 sec
Sample Input 1 :
4 2 3
Sample Output 1 :
Whis
Sample Input 2 :
10 2 4
Sample Output 2 :
Beerus
Explanation to Sample Input 1:
Initially, there are 4 coins,  In the first move, Beerus can remove either 1, 2, or 3 coins in all three cases, Whis can win by removing all the remaining coins. 

from sys import stdin

def findWinner(n, x, y) :
	dp = [-1]*(n+1)
	dp[1]=1
	a1 = -1
	a2 = -1
	a3 = -1
	for i in range(1, n+1):
		if i==1 or i==x or i==y:
			dp[i]=1
		else:
			a1 =1^ dp[i-1]
			if (i-x) >=1:
				a2 = 1 ^ dp[i-x]
			if (i-y) >= 1:
				a3 =1 ^ dp[i-y]
			dp[i] = max(a1,a2,a3)
	if dp[n] == 0:
		return "Whis"
	else:
		return "Beerus"
	

#main
li = stdin.readline().rstrip().split(" ")
n = int(li[0])
x = int(li[1])
y = int(li[2])

print(findWinner(n, x, y))


or
def findWinner(n, x, y) :
	#Your code goes here
	dp=[False]*(n+1)
	if x>y:
		x,y = y,x
	for i in range(1, n+1):
		if i==1 or i==x or i==y:
			dp[i] = True
		elif i < x:
			dp[i] = not(dp[i-1])
		elif i < y:
			dp[i] = not(dp[i-1] and dp[i-x])
		else:
			dp[i] = not(dp[i-1] and dp[i-x] and dp[i-y])
	if not dp[n]:
		return "Whis"
	else:
		return "Beerus"
